apiVersion: kagenti.operator.dev/v1alpha1
kind: Component
metadata:
  name: gateway-api
  namespace: kagenti-system
spec:
  description: Istio Infra component

  infra:
    infraType: Networking
    infraProvider: k8s-sigs

  deployer:
    name: "Kubernetes Manifest Deployer"
    namespace: "kagenti-system"
    kubernetes:
      manifest:
        url: https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.1.0/standard-install.yaml
    env:
---
apiVersion: kagenti.operator.dev/v1alpha1
kind: Component
metadata:
  name: phoenix
  namespace: kagenti-system
spec:
  description: phoenix

  infra:
    infraType: Observability
    infraProvider: phoenix

  deployer:
    name: "Kubernetes Manifest Deployer"
    namespace: kagenti-system
    kubernetes:
      manifest:
        github:
           repository: https://github.com/kagenti/kagenti
           path: kagenti/installer/app/resources/phoenix.yaml
           revision: main
           authSecretRef:
             name: github-token-secret

    env:
---

apiVersion: kagenti.operator.dev/v1alpha1
kind: Component
metadata:
  name: test-mcp-server
  namespace: kagenti-system
spec:
  # Component type (only one should be specified)
  tool:
    toolType: "MCP"
    build:

      mode: dev
      pipeline:
        parameters:
          - name: repo-url
            value: github.com/kagenti/kagenti.git
          - name: revision
            value: "main"
          - name: subfolder-path
            value: "kagenti/examples/mcp"
          - name: image
            value: "registry.cr-system.svc.cluster.local:5000/test-mcp-server:latest"
      cleanupAfterBuild: true
  deployer:
    name: test-mcp-server
    namespace: kagenti-system
    deployAfterBuild: true
    kubernetes:
      imageSpec:
        image: "test-mcp-server"
        imageTag: "latest"
        imageRegistry: "registry.cr-system.svc.cluster.local:5000"
        imagePullPolicy: "IfNotPresent"
      containerPorts:
        - name: "http"
          containerPort: 8090
          protocol: "TCP"
      servicePorts:
        - name: "http"
          port: 8008
          targetPort: 8090
          protocol: "TCP"
      resources:
        limits:
          cpu: "1"
          memory: "2Gi"
        requests:
          cpu: "500m"
          memory: "1Gi"
      serviceType: "ClusterIP"

    env:
      - name: HOST
        value: "0.0.0.0"
      - name: PORT
        value: "10000"
---

apiVersion: kagenti.operator.dev/v1alpha1
kind: Component
metadata:
  name: research-agent
  namespace: kagenti-system

spec:
  description: "A research agent for information gathering"

  agent:
    # Optional build specification for building from source
    build:
      mode: dev
      pipeline:
        parameters:
          - name: github-token-secret
            value: "github-credentials"
          - name: repo-url
            value: "github.com/kagenti/agent-examples.git"
          - name: revision
            value: "main"
          - name: subfolder-path
            value: "acp/acp_ollama_researcher"
          - name: image
            value: "registry.cr-system.svc.cluster.local:5000/beai-research-agent:latest"
      cleanupAfterBuild: true

  deployer:
    name: "my-agent-deployment"
    namespace: kagenti-system
    deployAfterBuild: true
    kubernetes:
      imageSpec:
        image: "beai-research-agent"
        imageTag: "latest"
        imageRegistry: "registry.cr-system.svc.cluster.local:5000"
        imagePullPolicy: "IfNotPresent"
      containerPorts:
        - name: "http"
          containerPort: 8090
          protocol: "TCP"
      servicePorts:
        - name: "http"
          port: 8008
          targetPort: 8090
          protocol: "TCP"
      resources:
        limits:
          cpu: "1"
          memory: "2Gi"
        requests:
          cpu: "500m"
          memory: "1Gi"
      serviceType: "ClusterIP"

    env:
      - name: HOST
        value: "0.0.0.0"
      - name: LLM_API_BASE
        value: "http://host.docker.internal:11434/v1"
      - name: LLM_API_KEY
        value: "dummy"
      - name: LLM_MODEL
        value: "llama3.2:3b-instruct-fp16"
